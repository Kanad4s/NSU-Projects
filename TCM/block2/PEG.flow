import lingo/pegcode/driver;
import runtime;
import string;
import grammar;

export {
    s2MyExpr(str: string) -> MyExpr {
		parsic(compilePegGrammar("#include grammar.lingo"), str, defaultPegActions);
	}

    MyExpr2s(myExpr : MyExpr) -> string {
        switch(myExpr : MyExpr) {
            Int(var) : i2s(var);
            Sum(l, r) :  "(" + MyExpr2s(l) + "+" + MyExpr2s(r) + ")";
            Sub(l, r) :  "(" + MyExpr2s(l) + "-" + MyExpr2s(r) + ")";
            Mul(l, r) : "(" + MyExpr2s(l) + "*" + MyExpr2s(r) + ")";
            Div(l, r) : "(" + MyExpr2s(l) + "/" + MyExpr2s(r) + ")";
        }
    }

    calculateMyExpr(myExpr : MyExpr) -> int {
        switch(myExpr : MyExpr) {
            Int(var) : var;
            Sum(l, r)  : calculateMyExpr(l) + calculateMyExpr(r);
            Sub(l, r) : calculateMyExpr(l) - calculateMyExpr(r);
            Mul(l, r) : calculateMyExpr(l) * calculateMyExpr(r);
            Div(l, r) : calculateMyExpr(l) / calculateMyExpr(r);
        }
    }
}

main() {
    str: string = "((2 * 3) + 5)";
    myExpr : MyExpr = s2MyExpr(str);
    println(myExpr);
    quit(0)
}