import lingo/pegcode/driver;
import runtime;
import string;

export {
    MyExpr ::= Sum, Mul, Int;
    Sum(lhs : MyExpr, rhs : MyExpr);
    Mul(lhs : MyExpr, rhs : MyExpr);
    Int(val : int);

    s2MyExpr(str: string) -> MyExpr {
		parsic(compilePegGrammar("#include grammar.lingo"), str, defaultPegActions);
	}

    MyExpr2s(myExpr : MyExpr) -> string {
        switch(myExpr : MyExpr) {
            Sum(lhs, rhs) :  "(" + MyExpr2s(lhs) + "+" + MyExpr2s(rhs) + ")";
            Mul(lhs, rhs) : "(" + MyExpr2s(lhs) + "*" + MyExpr2s(rhs) + ")";
            Int(var) : i2s(var);
        }
    }

    calculateMyExpr(myExpr : MyExpr) -> int {
        switch(myExpr : MyExpr) {
            Sum(lhs, rhs)  : calculateMyExpr(lhs) + calculateMyExpr(rhs);
            Mul(lhs, rhs) : calculateMyExpr(lhs) * calculateMyExpr(rhs);
            Int(var) : var;
        }
    }
}

main() {
    str: string = "((2 * 3) + 5)";
    myExpr : MyExpr = s2MyExpr(str);
    println(myExpr);
    quit(0)
}